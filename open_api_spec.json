{
  "openapi": "3.0.3",
  "info": {
    "title": "Authentication",
    "version": "1.0.0",
    "termsOfService": "https://usc.pax8.com/resource/display/65345"
  },
  "servers": [
    {
      "url": "https://api.pax8.com/v1"
    }
  ],
  "security": [
    {
      "OAuth2": []
    }
  ],
  "tags": [
    {
      "name": "Access Token",
      "description": "The Access Token that allows access to the Pax8 API"
    },
    {
      "name": "Companies",
      "description": "Companies represent the customers your organization serves through the Pax8 platform. Fetch a list of your company records, or a specific company by its companyId"
    },
    {
      "name": "Products",
      "description": "The Products resource lets you fetch all the information required to complete an Order -- product descriptions, pricing, provisioning details, and the dependencies associated with each product"
    },
    {
      "name": "Orders",
      "description": "Orders describe your purchases of Pax8 products. Endpoints let you create new product orders and query past purchases"
    },
    {
      "name": "Subscriptions",
      "description": "Subscriptions describe terms of service, including price and the billing start/end dates for a specified product/company combination. Resources let you update, cancel, and fetch details of existing subscriptions"
    },
    {
      "name": "Contacts",
      "description": "Contacts represent the people who should be provided visibility into events such as provisioning"
    }
  ],
  "paths": {
    "/token": {
      "post": {
        "x-readme": {
          "explorer-enabled": false
        },
        "tags": [
          "Access Token"
        ],
        "summary": "Create a new Access Token",
        "description": "Create a new Access Token. Use the code examples to create an Access token on your local machine. Then copy the `access_token` into the Authorization header of any endpoint in the documentation to start making calls. The audience should be set to `https://api.pax8.com` for the partner endpoints.",
        "operationId": "createAccessToken",
        "requestBody": {
          "description": "Token Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              },
              "examples": {
                "token-request-example": {
                  "$ref": "#/components/examples/token-request-example"
                }
              }
            }
          }
        },
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                },
                "examples": {
                  "token-response-example": {
                    "$ref": "#/components/examples/token-response-example"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "token-error-auth-example": {
                    "$ref": "#/components/examples/token-error-auth-example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create a new Company",
        "description": "Creates a new Company. ATTENTION - The Company will be placed in an “inactive” status until the [Company has primary Contacts added](#tag/Contacts). Once contacts are added, the company will move to “active”.",
        "operationId": "createCompany",
        "requestBody": {
          "description": "Company object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              },
              "examples": {
                "company-post": {
                  "$ref": "#/components/examples/company-post"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Company create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                },
                "examples": {
                  "company-0": {
                    "$ref": "#/components/examples/company-0"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Company",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Fetch a paginated list of your companies",
        "description": "Returns a paginated list of all your companies filtered by optional parameters",
        "operationId": "findCompanies",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number to request for in the companies list",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Return this number of company records per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Return companies sorted by this field and direction. Formatted as fieldName,direction - ex. sort=name,desc",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "city",
                "country",
                "stateOrProvince",
                "postalCode"
              ]
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Return only companies matching this ```city``` value",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Greenwood Village"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Return only companies matching this ```country``` value",
            "required": false,
            "schema": {
              "type": "string",
              "example": "United States"
            }
          },
          {
            "name": "stateOrProvince",
            "in": "query",
            "description": "Return only companies matching this ```stateOrProvince``` value",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Colorado"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "description": "Return only companies matching this ```postalCode``` value",
            "required": false,
            "schema": {
              "type": "string",
              "example": "80111"
            }
          },
          {
            "name": "selfServiceAllowed",
            "in": "query",
            "description": "Return only companies matching this ```selfServiceAllowed``` value",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "billOnBehalfOfEnabled",
            "in": "query",
            "description": "Return only companies matching this ```billOnBehalfOfEnabled``` value",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "orderApprovalRequired",
            "in": "query",
            "description": "Return only companies matching this ```orderApprovalRequired``` value",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Return only companies matching this ```status``` value",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Active",
                "Inactive",
                "Deleted"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/Page"
                    }
                  }
                },
                "examples": {
                  "companies-paged": {
                    "$ref": "#/components/examples/companies-paged"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Fetch a single company record by companyId",
        "description": "Returns a single company record matching the ```companyId``` you specify",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                },
                "examples": {
                  "company-0": {
                    "$ref": "#/components/examples/company-0"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Update an existing Company",
        "description": "Updates an existing Company. ATTENTION - at least one parameter has to be modified.",
        "operationId": "updateCompany",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          }
        ],
        "requestBody": {
          "description": "Company object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdate"
              },
              "examples": {
                "company-post": {
                  "$ref": "#/components/examples/company-update-post"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Company update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                },
                "examples": {
                  "company-0": {
                    "$ref": "#/components/examples/company-0"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid Company",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/contacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a new Contact",
        "description": "Creates a new Contact",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          }
        ],
        "requestBody": {
          "description": "Contact object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid contact create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Fetch a paginated list of contacts",
        "description": "Returns a paginated list of contacts ordered by ```createDate``` descending",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number to request for in the contacts list",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Return this number of company records per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/Page"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Fetch a contact",
        "description": "Returns a contact",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5ba26319-00e4-4a8f-986b-02a1170af269"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Contact or company not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid contact update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a contact",
        "description": "Update a contacts information",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5ba26319-00e4-4a8f-986b-02a1170af269"
            }
          }
        ],
        "requestBody": {
          "description": "Updated contact",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Contact or company not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid contact update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact",
        "description": "Deletes a contact",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5ba26319-00e4-4a8f-986b-02a1170af269"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "404": {
            "description": "Contact or company not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid contact delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Fetch a paginated list of Pax8 products",
        "description": "Returns a paginated list of Pax8 products filtered by optional query parameters",
        "operationId": "findAllProducts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number to request for in the products list",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Return this number of products per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Return products sorted by the field and direction specified. Formatted as fieldName, direction - ex. sort=name,desc",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "vendor"
              ]
            }
          },
          {
            "name": "vendorName",
            "in": "query",
            "description": "Return only products matching the specified vendor name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Microsoft"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/Page"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Fetch a product by its productId",
        "description": "Returns only the product record for the productId you specify",
        "operationId": "findProductByProductId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "aaaee3f-262c-47a4-b0e6-f9ce8b54fcd7"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                },
                "examples": {
                  "microsoft-office-365-e3": {
                    "$ref": "#/components/examples/microsoft-office-365-e3"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/provision-details": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Fetch provisioning details for a specific product",
        "description": "Returns provisioning details for the specified productId. Provisioning details for a product are dynamic data.",
        "operationId": "findProvisionDetailsByProductId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "aaaee3f-262c-47a4-b0e6-f9ce8b54fcd7"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProvisioningDetail"
                      }
                    }
                  }
                },
                "examples": {
                  "microsoft-office-365-e3-details": {
                    "$ref": "#/components/examples/microsoft-office-365-e3-details"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/dependencies": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Fetch a list of product dependencies for a specified product",
        "description": "Returns associated dependencies for the specified ```productId```. A products dependencies are dynamic data.",
        "operationId": "findProductDependenciesByProductId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "aaaee3f-262c-47a4-b0e6-f9ce8b54fcd7"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dependencies"
                },
                "examples": {
                  "dependencies-example": {
                    "$ref": "#/components/examples/dependencies-example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/pricing": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Fetch pricing information for a particular product",
        "description": "Returns recommended pricing and partner cost for the specified productId. A products pricing is dynamic data.",
        "operationId": "findPricingByProductId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The product id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "aaaee3f-262c-47a4-b0e6-f9ce8b54fcd7"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Use the companyId in the query to see company-specific pricing",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pricing"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Fetch a paginated list of orders associated with your partner",
        "description": "Returns a paginated list of orders. Currently NOT supported for scheduled orders(orders with a future date).",
        "operationId": "findOrders",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number to request for in the orders list",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "description": "The company id to filter on",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/Page"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create a new order for a specified company",
        "description": "Create a new order. Currently NOT supported for scheduled orders(orders with a future date).",
        "operationId": "createOrder",
        "requestBody": {
          "description": "Order object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              },
              "examples": {
                "microsoft-office-365-e3-order": {
                  "$ref": "#/components/examples/microsoft-office-365-e3-order"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "isMock",
            "schema": {
              "type": "boolean"
            },
            "description": "Perform validations only. Skip any interactions with the database.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "examples": {
                  "microsoft-office-365-e3-order-response": {
                    "$ref": "#/components/examples/microsoft-office-365-e3-order-response"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Fetch order details by orderId",
        "description": "Returns the Order record specified by OrderId. Currently NOT supported for scheduled orders",
        "operationId": "findOrdersByOrderId",
        "parameters": [
          {
            "name": "orderId",
            "description": "The unique identifier for an order record",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "8f72220b-2a13-4856-a647-b80448722bbb"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "examples": {
                  "microsoft-office-365-e3-order-get-response": {
                    "$ref": "#/components/examples/microsoft-office-365-e3-order-get-response"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid order id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Fetch a paginated list of subscriptions",
        "description": "Fetch a paginated list of subscriptions. Default page is 0 and default size is 10. The maximum page size is 200",
        "operationId": "findSubscriptions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number to request in the subscriptions list",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Returns _this_ number of subscriptions per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Return subscriptions sorted by this field and direction Formatted as fieldName,direction - ex. sort=createdDate,desc",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "quantity",
                "startDate",
                "endDate",
                "createdDate",
                "billingStart",
                "price"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Return only subscriptions matching this ```status``` value",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Active",
                "Cancelled",
                "PendingManual",
                "PendingAutomated",
                "PendingCancel",
                "WaitingForDetails",
                "Trial",
                "Converted",
                "PendingActivation",
                "Activated"
              ]
            }
          },
          {
            "name": "billingTerm",
            "in": "query",
            "description": "Return only subscriptions matching this ```billingTerm``` value",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Monthly",
                "Annual",
                "2-Year",
                "3-Year",
                "One-Time",
                "Trial",
                "Activation"
              ]
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Return only subscriptions matching this ```companyId``` value",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Return only subscriptions matching this ```productId``` value",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "aaaee3f-262c-47a4-b0e6-f9ce8b54fcd7"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subscription"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/Page"
                    }
                  }
                },
                "examples": {
                  "subscriptions-paged": {
                    "$ref": "#/components/examples/subscriptions-paged"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid companyId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Fetch a subscription by subscriptionId",
        "description": "Returns the Subscription record specified by the subscriptionId",
        "operationId": "findSubscriptionBySubscriptionId",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "04814f37-bef0-48b7-b388-c04a1e31f889"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                },
                "examples": {
                  "microsoft-office-365-e3-subscription": {
                    "$ref": "#/components/examples/microsoft-office-365-e3-subscription"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Update a specified subscription",
        "description": "Updates a subscription. Currently NOT supported for subscriptions with a future date.",
        "operationId": "updateSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscription to be updated",
            "required": true,
            "schema": {
              "type": "string",
              "example": "04814f37-bef0-48b7-b388-c04a1e31f889"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Subscription",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              },
              "examples": {
                "subscription-update-example": {
                  "$ref": "#/components/examples/subscription-update-example"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid Subscription Update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Cancel a subscription",
        "description": "Cancels the Subscription specified by subscriptionId",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscription to be updated",
            "required": true,
            "schema": {
              "type": "string",
              "example": "04814f37-bef0-48b7-b388-c04a1e31f889"
            }
          },
          {
            "name": "cancelDate",
            "in": "query",
            "description": "The date to cancel the subscription on",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2000-10-31T01:30:00.000-05:00"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "404": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/history": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Fetch the history of a subscription",
        "description": "Returns a list of changes for a subscription",
        "operationId": "findSubscriptionHistoryBySubscriptionId",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "04814f37-bef0-48b7-b388-c04a1e31f889"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subscription"
                      }
                    }
                  }
                },
                "examples": {
                  "subscriptions-history": {
                    "$ref": "#/components/examples/subscription-history"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Fetch a paginated list of invoices",
        "description": "Fetch a paginated list of invoices. Default page is 0 and default size is 10. The maximum page size is 200",
        "operationId": "findPartnerInvoices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number to request in the invoices list",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Returns _this_ number of invoices per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Return invoices sorted by this field and direction Formatted as fieldName,direction - ex. sort=invoiceDate,desc",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "invoiceDate",
                "dueDate",
                "status",
                "partnerName",
                "total",
                "balance",
                "carriedBalance"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Return only invoices matching this ```status``` value",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Unpaid",
                "Paid",
                "Void",
                "Carried",
                "Nothing Due"
              ]
            }
          },
          {
            "name": "invoiceDate",
            "in": "query",
            "description": "Return only invoices matching this ```invoiceDate``` value",
            "required": false,
            "schema": {
              "type": "string",
              "format": "yyyy-MM-dd",
              "example": "2000-10-31"
            }
          },
          {
            "name": "invoiceDateRangeStart",
            "in": "query",
            "description": "Return only invoices with an ```invoiceDate``` greater than or equal to this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "yyyy-MM-dd",
              "example": "2000-10-31"
            }
          },
          {
            "name": "invoiceDateRangeEnd",
            "in": "query",
            "description": "Return only invoices with an ```invoiceDate``` less than or equal to this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "yyyy-MM-dd",
              "example": "2001-10-31"
            }
          },
          {
            "name": "dueDate",
            "in": "query",
            "description": "Return only invoices matching this ```dueDate``` value",
            "required": false,
            "schema": {
              "type": "string",
              "format": "yyyy-MM-dd",
              "example": "2000-10-31"
            }
          },
          {
            "name": "total",
            "in": "query",
            "description": "Return only invoices matching this ```total``` value",
            "required": false,
            "schema": {
              "type": "number",
              "example": "100.00"
            }
          },
          {
            "name": "balance",
            "in": "query",
            "description": "Return only invoices matching this ```balance``` value",
            "required": false,
            "schema": {
              "type": "number",
              "example": "1000.00"
            }
          },
          {
            "name": "carriedBalance",
            "in": "query",
            "description": "Return only invoices matching this ```carriedBalance``` value",
            "required": false,
            "schema": {
              "type": "number",
              "example": "2000.00"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Return only invoices matching this ```companyId``` value",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/Page"
                    }
                  }
                },
                "examples": {
                  "invoices-paged": {
                    "$ref": "#/components/examples/invoices-paged"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid companyId or productId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{invoiceId}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Fetch an invoice by invoiceId",
        "description": "Fetch a paginated list of invoices. Default page is 0 and default size is 10. The maximum page size is 200",
        "operationId": "getPartnerInvoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "The invoice id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "57328a3c-6e95-493c-ad2f-e33b896378c7"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                },
                "examples": {
                  "invoice-0": {
                    "$ref": "#/components/examples/invoice-0"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{invoiceId}/items": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Fetch a paginated list of items for an invoice",
        "description": "Fetch a paginated list of invoice items. Default page is 0 and default size is 10. The maximum page size is 200",
        "operationId": "findPartnerInvoiceItems",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "The invoice id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "57328a3c-6e95-493c-ad2f-e33b896378c7"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to request in the invoices items list",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Returns _this_ number of invoices items per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 1,
              "maximum": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvoiceItem"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/Page"
                    }
                  }
                },
                "examples": {
                  "invoice-items": {
                    "$ref": "#/components/examples/invoice-items"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid invoice id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/usage-summaries": {
      "get": {
        "tags": [
          "Usage Summaries"
        ],
        "summary": "Fetch a paginated list of usage summaries",
        "description": "Fetch a paginated list of usage summaries. Default page is 0 and default size is 10. The maximum page size is 200",
        "operationId": "findSubscriptionUsageSummaries",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "04814f37-bef0-48b7-b388-c04a1e31f889"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to request in the usage summaries list",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Returns _this_ number of usage summaries per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Return usage summaries sorted by this field and direction Formatted as fieldName,direction - ex. sort=resourceGroup,desc",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "resourceGroup",
                "currentCharges",
                "partnerTotal"
              ]
            }
          },
          {
            "name": "resourceGroup",
            "in": "query",
            "description": "Return only usage summaries matching this ```resourceGroup``` value",
            "required": false,
            "schema": {
              "type": "string",
              "example": "IronCloud Technologies"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Return only usage summaries with this ```companyId``` value",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f7fc273a-8d86-45c9-a26f-ffd42416adda"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UsageSummary"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/Page"
                    }
                  }
                },
                "examples": {
                  "usage-summaries-paged": {
                    "$ref": "#/components/examples/usage-summaries-paged"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid subscriptionId or companyId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/usage-summaries/{usageSummaryId}": {
      "get": {
        "tags": [
          "Usage Summaries"
        ],
        "summary": "Fetch a usage summary by usageSummaryId",
        "description": "Fetch a paginated list of usage summaries. Default page is 0 and default size is 10. The maximum page size is 200",
        "operationId": "findSubscriptionUsageSummary",
        "parameters": [
          {
            "name": "usageSummaryId",
            "in": "path",
            "description": "The usage summary id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f5e4cefe-09ff-46a0-b3b0-4f392cfae44c"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageSummary"
                }
              }
            }
          }
        }
      }
    },
    "/usage-summaries/{usageSummaryId}/usage-lines": {
      "get": {
        "tags": [
          "Usage Summaries"
        ],
        "summary": "Fetch a paginated list of usage lines for a usage summary",
        "description": "Fetch a paginated list of usage lines. Default page is 0 and default size is 10. The maximum page size is 200",
        "operationId": "findUsageLines",
        "parameters": [
          {
            "name": "usageSummaryId",
            "in": "path",
            "description": "The usage summary id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f5e4cefe-09ff-46a0-b3b0-4f392cfae44c"
            }
          },
          {
            "name": "usageDate",
            "in": "query",
            "description": "The date usage was recorded",
            "required": true,
            "schema": {
              "type": "string",
              "format": "yyyy-MM-dd",
              "example": "2020-01-01"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Return only usage summaries with this ```productId``` value",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "aaaee3f-262c-47a4-b0e6-f9ce8b54fcd7"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UsageLine"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/Page"
                    }
                  }
                },
                "examples": {
                  "invoice-items": {
                    "$ref": "#/components/examples/usage-lines-paged"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid usage summary id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TokenRequest": {
        "type": "object",
        "required": [
          "client_id",
          "client_secret",
          "audience",
          "grant_type"
        ],
        "properties": {
          "client_id": {
            "type": "string",
            "description": "The client id"
          },
          "client_secret": {
            "type": "string",
            "description": "The client secret"
          },
          "audience": {
            "type": "string",
            "enum": [
              "https://api.pax8.com",
              "api://p8p.client",
              "api://provisioning",
              "api://usage"
            ]
          },
          "grant_type": {
            "type": "string",
            "enum": [
              "client_credentials"
            ]
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The Access Token"
          },
          "expires_in": {
            "type": "number",
            "description": "The time to live of the Access Token in seconds",
            "enum": [
              86400
            ]
          },
          "token_type": {
            "type": "string",
            "enum": [
              "Bearer"
            ]
          }
        }
      },
      "Company": {
        "type": "object",
        "required": [
          "name",
          "address",
          "phone",
          "website",
          "billOnBehalfOfEnabled",
          "selfServiceAllowed",
          "orderApprovalRequired"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "The unique id of the company"
          },
          "name": {
            "type": "string",
            "example": "Pax8",
            "description": "The company name"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone": {
            "type": "string",
            "description": "The primary phone number of the company",
            "example": "555-555-5555"
          },
          "website": {
            "type": "string",
            "description": "The full URL of the company website",
            "example": "https://www.pax8.com/"
          },
          "externalId": {
            "type": "string",
            "description": "An external ID that can be assigned to the company for reference"
          },
          "billOnBehalfOfEnabled": {
            "type": "boolean",
            "description": "Value is ```true``` if Pax8 handles billing transactions, value is ```false``` if partner handles billing transactions"
          },
          "selfServiceAllowed": {
            "type": "boolean",
            "description": "Value is ```true``` if self-service privileges are available to the company, otherwise value is ```false```"
          },
          "orderApprovalRequired": {
            "type": "boolean",
            "description": "Value is ```true``` if the company's self-service orders require approval, otherwise value is ```false```"
          },
          "status": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Deleted"
            ],
            "description": "Company Status:\n  * `Active` - The company is active\n  * `Inactive` - The company is inactive due to missing contacts\n  * `Deleted` - The company has been deleted\n"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date and time the company was last updated"
          }
        }
      },
      "CompanyUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "The unique id of the company"
          },
          "name": {
            "type": "string",
            "example": "Pax8",
            "description": "The company name"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone": {
            "type": "string",
            "description": "The primary phone number of the company",
            "example": "555-555-5555"
          },
          "website": {
            "type": "string",
            "description": "The full URL of the company website",
            "example": "https://www.pax8.com/"
          },
          "externalId": {
            "type": "string",
            "description": "An external ID that can be assigned to the company for reference"
          },
          "billOnBehalfOfEnabled": {
            "type": "boolean",
            "description": "Value is ```true``` if Pax8 handles billing transactions, value is ```false``` if partner handles billing transactions"
          },
          "selfServiceAllowed": {
            "type": "boolean",
            "description": "Value is ```true``` if self-service privileges are available to the company, otherwise value is ```false```"
          },
          "orderApprovalRequired": {
            "type": "boolean",
            "description": "Value is ```true``` if the company's self-service orders require approval, otherwise value is ```false```"
          },
          "status": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Deleted"
            ],
            "description": "Company Status:\n  * `Active` - The company is active\n  * `Inactive` - The company is inactive due to missing contacts\n  * `Deleted` - The company has been deleted\n"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The name of a product",
            "example": "Acme Corps Productivity Suite"
          },
          "vendorName": {
            "type": "string",
            "description": "The name of the vendor",
            "example": "Acme Corps"
          },
          "shortDescription": {
            "example": "Short description about the product to sell",
            "description": "A short description of the product",
            "type": "string"
          },
          "sku": {
            "type": "string",
            "example": "4225-776-3234",
            "description": "The product sku"
          },
          "vendorSku": {
            "type": "string",
            "example": "12345-AA-XYZ",
            "description": "The product vendor sku"
          },
          "altVendorSku": {
            "type": "string",
            "format": "uuid",
            "deprecated": true,
            "description": "The Microsoft legacy sku has been deprecated. Please transition to vendorSku"
          },
          "requiresCommitment": {
            "type": "boolean",
            "example": false,
            "description": "Whether the product requires a commitment"
          }
        }
      },
      "Dependencies": {
        "type": "object",
        "properties": {
          "commitmentDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Commitment"
            }
          },
          "productDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDependency"
            }
          }
        }
      },
      "ProductDependency": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the product constraint"
          },
          "products": {
            "type": "array",
            "description": "A list of products that satisfy the constraint",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "Pricing": {
        "type": "object",
        "properties": {
          "billingTerm": {
            "type": "string",
            "enum": [
              "Monthly",
              "Annual",
              "2-Year",
              "3-Year",
              "One-Time",
              "Trial",
              "Activation"
            ]
          },
          "commitmentTerm": {
            "type": "string",
            "description": "Duration of the commitment",
            "example": "3-Year"
          },
          "commitmentTermInMonths": {
            "type": "number",
            "description": "Commitment in months",
            "example": 36
          },
          "type": {
            "type": "string",
            "enum": [
              "Flat",
              "Volume",
              "Tiered",
              "Mark-Up"
            ]
          },
          "unitOfMeasurement": {
            "type": "string",
            "description": "The unit of measurement",
            "example": "Each"
          },
          "rates": {
            "description": "A list of rates",
            "items": {
              "$ref": "#/components/schemas/Rate"
            }
          }
        }
      },
      "Rate": {
        "type": "object",
        "properties": {
          "partnerBuyRate": {
            "type": "number",
            "description": "The partner cost",
            "example": 145.8
          },
          "suggestedRetailPrice": {
            "type": "number",
            "description": "The suggested customer cost",
            "example": 151.8
          },
          "startQuantityRange": {
            "type": "number",
            "example": 5,
            "description": "The start of the quantity range. If not set 0 is the default"
          },
          "endQuantityRange": {
            "type": "number",
            "example": 200,
            "description": "The end of the quantity range. If ```null``` there is no end of range"
          },
          "chargeType": {
            "type": "string",
            "enum": [
              "Per Unit",
              "Flat Rate"
            ],
            "description": "Rate Charge Type:\n  * `Per Unit` - The rate is multiplied directly by the quantity based on the start and end quantity range\n  * `Flat Rate` - The rate is flat for the quantity based on the start and end quantity range\n"
          }
        }
      },
      "Commitment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the commitment record",
            "format": "uuid",
            "readOnly": true
          },
          "term": {
            "type": "string",
            "description": "Duration of the commitment",
            "example": "3-Year"
          },
          "autoRenew": {
            "type": "boolean",
            "description": "Renews without manual intervention at the end of the term"
          },
          "renewalWindowDaysBeforeTermEnd": {
            "type": "number",
            "description": "Number of days _before_ term end-date when renewal window opens"
          },
          "renewalWindowDaysAfterTermEnd": {
            "type": "number",
            "description": "Number of days after the term end-date that renewal window closes"
          },
          "allowForQuantityIncrease": {
            "description": "Is ```true``` if quantity can be increased during commitment term",
            "type": "boolean"
          },
          "allowForQuantityDecrease": {
            "type": "boolean",
            "description": "Is ```true``` if quantity can be decreased during commitment term"
          },
          "allowForEarlyCancellation": {
            "description": "Is ```true``` if commitment can be cancelled prior to end of term",
            "type": "boolean"
          },
          "cancellationFeeApplied": {
            "type": "boolean",
            "description": "Is ```true``` if canceling subscription entails a fee"
          },
          "isTransferable": {
            "type": "boolean",
            "description": "Is ```true``` if commitment can be transferred to another company"
          }
        }
      },
      "SubscriptionCommitment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the commitment record",
            "format": "uuid"
          },
          "term": {
            "type": "string",
            "description": "Duration of the commitment",
            "example": "3-Year"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProvisioningDetail": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "readOnly": true,
            "description": "The label to display"
          },
          "key": {
            "type": "string",
            "example": "userEmailAddress",
            "description": "The key"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of values based on the ```valuetype``` and ```possibleValues```",
            "writeOnly": true
          },
          "description": {
            "type": "string",
            "example": "Provide the user's email address",
            "description": "Instructions and context to help enter the required provisioning information",
            "readOnly": true
          },
          "valueType": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "Input",
              "Single-Value",
              "Multi-Value"
            ],
            "description": "Provisioning Detail Value Type:\n * `Input` - A value that is supplied by a user\n * `Single-Value` - A single value that is picked from the `possibleValues` list\n * `Multi-Value` - One or multiple values that are picked from the `possibleValues` list\n"
          },
          "possibleValues": {
            "type": "array",
            "readOnly": true,
            "description": "A list of possible values. `possibleValues` will be null when `valueType` is `Input`",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateOrder": {
        "type": "object",
        "required": [
          "companyId",
          "lineItems"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "unique id of the order",
            "readOnly": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "description": "unique id of the purchasing company ie. end-user"
          },
          "createdDate": {
            "type": "string",
            "format": "date",
            "description": "the date the order was created",
            "readOnly": true
          },
          "orderedBy": {
            "type": "string",
            "enum": [
              "Pax8 Partner",
              "Customer",
              "Pax8"
            ],
            "description": "the type of user who created the order"
          },
          "orderedByUserId": {
            "type": "string",
            "format": "uuid",
            "description": "unique id of the user who created this order",
            "readOnly": true
          },
          "orderedByUserEmail": {
            "type": "string",
            "format": "email",
            "description": "the email address of the user who created this order",
            "example": "john@doe.com"
          },
          "isScheduled": {
            "type": "boolean",
            "description": "is ```true``` if order is future dated",
            "readOnly": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateLineItem"
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "required": [
          "companyId",
          "lineItems"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "unique id of the order",
            "readOnly": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "description": "unique id of the purchasing company ie. end-user"
          },
          "createdDate": {
            "type": "string",
            "format": "date",
            "description": "the date the order was created",
            "readOnly": true
          },
          "orderedBy": {
            "type": "string",
            "enum": [
              "Pax8 Partner",
              "Customer",
              "Pax8"
            ],
            "description": "the type of user who created the order"
          },
          "orderedByUserId": {
            "type": "string",
            "format": "uuid",
            "description": "unique id of the user who created this order",
            "readOnly": true
          },
          "orderedByUserEmail": {
            "type": "string",
            "format": "email",
            "description": "the email address of the user who created this order",
            "example": "john@doe.com"
          },
          "isScheduled": {
            "type": "boolean",
            "description": "is ```true``` if order is future dated",
            "readOnly": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          }
        }
      },
      "Subscription": {
        "type": "object",
        "required": [
          "quantity",
          "startDate",
          "billingTerm"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "parentSubscriptionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "quantity": {
            "type": "number"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "billingStart": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "Active",
              "Cancelled",
              "PendingManual",
              "PendingAutomated",
              "PendingCancel",
              "WaitingForDetails",
              "Trial",
              "Converted",
              "PendingActivation",
              "Activated"
            ],
            "description": "Subscription Status :\n * `Active` - Provisioning request complete\n * `Cancelled` - Deprovisioning request complete\n * `PendingManual` -  An associated manual provisioning task isn't started/completed\n * `PendingAutomated` - An associated automated provisioning task isn't started/completed\n * `PendingCancel` - Deprovisioning request pending\n * `WaitingForDetails` - Provisioning details are missing\n * `Trial` - Trial subscriptions offer free or discounted access for a limited time.\n * `Converted` - Converted from trial\n * `PendingActivation` - Requires Activation but has not yet been activated\n * `Activated` - Requires Activation and has been activated\n\nActivation is required for a small subset of products.  Billing services do not begin for these products until \"activation\" is complete.\n"
          },
          "price": {
            "description": "The price for the customer.",
            "type": "number",
            "example": 15.39
          },
          "currencyCode": {
            "description": "The currency ISO 4217 code",
            "type": "string",
            "example": "USD"
          },
          "partnerCost": {
            "description": "The price for the Partner.",
            "type": "number",
            "example": 11.39
          },
          "billingTerm": {
            "type": "string",
            "enum": [
              "Monthly",
              "Annual",
              "2-Year",
              "3-Year",
              "1-Time",
              "Trial",
              "Activation"
            ]
          },
          "provisioningDetails": {
            "writeOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProvisioningDetail"
            }
          },
          "commitmentTerm": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionCommitment"
              }
            ]
          }
        }
      },
      "CreateLineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "commitmentTermId": {
            "type": "string",
            "format": "uuid",
            "description": "This field is required when the product associated with the order has requiresCommitment field set to true. To pick the correct commitment term, use the https://devx.pax8.com/reference/findproductdependenciesbyproductid endpoint and chose a commitment term whose term field represents an equal or greater time than the desired billingTerm. For example, when the order billingTerm is annual, pass the identifier of the commitment term that matches an annual commitment, or if desired and available, pass a commitment term id of 2-year, or 3-year"
          },
          "provisionStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "lineItemNumber": {
            "writeOnly": true,
            "type": "number",
            "example": 1,
            "description": "Required. Number used as a reference to the line item for parent line items"
          },
          "billingTerm": {
            "type": "string",
            "enum": [
              "Monthly",
              "Annual",
              "2-Year",
              "3-Year",
              "1-Time",
              "Trial",
              "Activation"
            ]
          },
          "parentSubscriptionId": {
            "writeOnly": true,
            "type": "string",
            "format": "uuid",
            "description": "Reference to the subscription this item depends on"
          },
          "parentLineItemNumber": {
            "writeOnly": true,
            "type": "number",
            "example": 1,
            "description": "Reference to the required parent line item in this same order"
          },
          "quantity": {
            "type": "number",
            "example": 45,
            "description": "Whole Number"
          },
          "provisioningDetails": {
            "writeOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProvisioningDetail"
            }
          }
        },
        "required": [
          "productId",
          "companyId",
          "lineItemNumber",
          "quantity",
          "billingTerm"
        ]
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "subscriptionId": {
            "type": "string",
            "format": "uuid"
          },
          "commitmentTermId": {
            "type": "string",
            "format": "uuid"
          },
          "provisionStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "lineItemNumber": {
            "writeOnly": true,
            "type": "number",
            "example": 1,
            "description": "Required. Number used as a reference to the line item for parent line items"
          },
          "billingTerm": {
            "type": "string",
            "enum": [
              "Monthly",
              "Annual",
              "2-Year",
              "3-Year",
              "1-Time",
              "Trial",
              "Activation"
            ]
          },
          "parentSubscriptionId": {
            "writeOnly": true,
            "type": "string",
            "format": "uuid",
            "description": "Reference to the subscription this item depends on"
          },
          "parentLineItemNumber": {
            "writeOnly": true,
            "type": "number",
            "example": 1,
            "description": "Reference to the required parent line item in this same order"
          },
          "quantity": {
            "type": "number",
            "example": 45,
            "description": "Whole Number"
          },
          "provisioningDetails": {
            "writeOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProvisioningDetail"
            }
          }
        },
        "required": [
          "productId",
          "companyId",
          "lineItemNumber",
          "quantity"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "description": "The primary street information",
            "example": "5500 S Quebec St"
          },
          "street2": {
            "type": "string",
            "description": "The secondary street information",
            "example": "Ste. 350"
          },
          "city": {
            "type": "string",
            "description": "The city",
            "example": "Greenwood Village"
          },
          "stateOrProvince": {
            "type": "string",
            "description": "The state or province",
            "example": "CO"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code",
            "example": "80111"
          },
          "country": {
            "type": "string",
            "description": "The country",
            "example": "US"
          }
        }
      },
      "Contact": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email",
          "phone"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid",
            "description": "The id",
            "example": "18d6329e-93f9-46a5-9df7-37e4c29d2840"
          },
          "firstName": {
            "type": "string",
            "description": "The first name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "The last name",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email",
            "example": "john@doe.com"
          },
          "phone": {
            "type": "string",
            "format": "phone",
            "description": "The phone number",
            "example": "555-555-5555"
          },
          "createdDate": {
            "readOnly": true,
            "type": "string",
            "description": "The created date",
            "example": "2020-05-12"
          },
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactType"
            }
          }
        }
      },
      "ContactType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Admin",
              "Billing",
              "Technical"
            ],
            "description": "A company must have a primary contact for each contact type. A single contact can be marked as a primary contact for all types\nContact Type:\n  * `Admin` - Administrative contact\n  * `Billing` - Billing contact\n  * `Technical` - Technical contact\n"
          },
          "primary": {
            "type": "boolean",
            "description": "Is this contact the primary contact for this Contact Type"
          }
        }
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The id"
          },
          "invoiceDate": {
            "type": "string",
            "format": "yyyy-MM-dd",
            "description": "The date the invoice is generated for"
          },
          "dueDate": {
            "type": "string",
            "format": "yyyy-MM-dd",
            "description": "The date on which payment is due"
          },
          "balance": {
            "type": "number",
            "description": "The current invoice balance"
          },
          "carriedBalance": {
            "type": "number",
            "description": "The outstanding balance until current invoiceDate"
          },
          "total": {
            "type": "number",
            "description": "The total amount due"
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency ISO 4217 code"
          },
          "partnerName": {
            "type": "string",
            "description": "The name of the invoiced partner"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "description": "The company id"
          },
          "externalId": {
            "type": "string",
            "description": "The company external id"
          }
        }
      },
      "InvoiceItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The unique id for this invoice item"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "The purchase order number"
          },
          "type": {
            "type": "string",
            "enum": [
              "rebate",
              "prorate",
              "subscription",
              "payment-credit",
              "one-time",
              "service-charge",
              "service-credit",
              "invoice-credit"
            ],
            "description": "The item type"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "description": "The company id"
          },
          "externalId": {
            "type": "string",
            "description": "The company external id"
          },
          "companyName": {
            "type": "string",
            "description": "The name of the company"
          },
          "startPeriod": {
            "type": "string",
            "format": "yyyy-MM-dd",
            "description": "The start period"
          },
          "endPeriod": {
            "type": "string",
            "format": "yyyy-MM-dd",
            "description": "The end period"
          },
          "quantity": {
            "type": "number",
            "description": "The quantity of this SKU"
          },
          "unitOfMeasure": {
            "type": "string",
            "description": "The unit of measure"
          },
          "term": {
            "type": "string",
            "enum": [
              "3 Year",
              "Annual",
              "2 Year",
              "Activation",
              "One-Time",
              "Arrears",
              "Trial",
              "Rebate",
              "One-time",
              "Monthly"
            ],
            "description": "The billing term"
          },
          "sku": {
            "type": "string",
            "description": "The product sku"
          },
          "description": {
            "type": "string",
            "description": "The description"
          },
          "details": {
            "type": "string",
            "description": "The details"
          },
          "rateType": {
            "type": "string",
            "description": "The rate type",
            "enum": [
              "markup (Percentage based markup over to be determined base cost)",
              "single (Single price for any quantity, same as flat)",
              "flat (Single price for any quantity, same as single)",
              "volume (Price scales linearly with quantity)",
              "tiered (Price dependant on quantity)"
            ]
          },
          "chargeType": {
            "type": "string",
            "description": "The charge type",
            "enum": [
              "flat",
              "per"
            ]
          },
          "price": {
            "type": "number",
            "description": "The customer unit price"
          },
          "subTotal": {
            "type": "number",
            "description": "The customer sub total. Represents cost of services plus billing fees."
          },
          "cost": {
            "type": "number",
            "description": "The partner unit cost"
          },
          "costTotal": {
            "type": "number",
            "description": "The partner total cost of the services"
          },
          "offeredBy": {
            "type": "string",
            "description": "The account who offers this product"
          },
          "billedByPax8": {
            "type": "boolean",
            "description": "Is the item billed directly by Pax8"
          },
          "total": {
            "type": "number",
            "description": "The customer total including all services and fees"
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "description": "The product id"
          },
          "productName": {
            "type": "string",
            "description": "The product name"
          },
          "billingFee": {
            "type": "number",
            "description": "The fee for Pax8 billing a bill on behalf of company"
          },
          "billingFeeRate": {
            "type": "number",
            "description": "The fee rate for Pax8 billing a bill on behalf of company"
          },
          "amountDue": {
            "type": "number",
            "description": "The final total due for the item for this invoice"
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency ISO 4217 code"
          },
          "subscriptionId": {
            "type": "string",
            "format": "uuid",
            "description": "If the type is 'subscription' or 'prorate' this field will contain the subscription identifier. Otherwise this field will be null."
          }
        }
      },
      "UsageSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The id"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "description": "The company id"
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "description": "The product id"
          },
          "resourceGroup": {
            "type": "string",
            "description": "Resource group assigned to the usage summary"
          },
          "vendorName": {
            "type": "string",
            "description": "Vendor Name"
          },
          "currentCharges": {
            "type": "number",
            "description": "Charges for the current month"
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency ISO 4217 code"
          },
          "partnerTotal": {
            "type": "number",
            "description": "The partner total for the current month"
          },
          "isTrial": {
            "type": "boolean",
            "description": "Indicates whether the usage summary is for a trial"
          }
        }
      },
      "UsageLine": {
        "type": "object",
        "properties": {
          "usageSummaryId": {
            "type": "string",
            "format": "uuid",
            "description": "The associated usage summary id"
          },
          "usageDate": {
            "type": "string",
            "format": "yyyy-MM-dd",
            "description": "The date the usage was recorded"
          },
          "productName": {
            "type": "string",
            "description": "The usage product name"
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "description": "The usage product id"
          },
          "unitOfMeasure": {
            "type": "string",
            "description": "The product unit of measure"
          },
          "quantity": {
            "type": "number",
            "description": "The usage quantity"
          },
          "currentCharges": {
            "type": "number",
            "description": "Charges for the usage line"
          },
          "currentProfit": {
            "type": "number",
            "description": "Profit for the usage line"
          },
          "partnerTotal": {
            "type": "number",
            "description": "The partner total for the usage line"
          },
          "unitPrice": {
            "type": "number",
            "description": "The unit price of the usage product"
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency ISO 4217 code"
          },
          "isTrial": {
            "type": "boolean",
            "description": "Indicates if the usage line is for a trial"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "size": {
            "type": "number",
            "default": 10,
            "minimum": 1,
            "maximum": 200,
            "description": "The size of the page",
            "example": 50
          },
          "totalElements": {
            "description": "The total number of elements able to be paged over",
            "example": 237
          },
          "totalPages": {
            "description": "The total number of pages based on the ```size``` and ```totalElements```",
            "example": 5
          },
          "number": {
            "description": "The current page",
            "example": 1
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of HTTP error"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "instance": {
            "type": "string",
            "description": "The path called"
          },
          "status": {
            "type": "integer",
            "description": "HTTP error code"
          },
          "details": {
            "type": "array",
            "description": "Additional API failures",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            }
          }
        }
      },
      "ErrorDetail": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "optional"
          },
          "message": {
            "type": "string",
            "description": "required"
          },
          "instance": {
            "type": "string",
            "description": "optional"
          },
          "status": {
            "type": "integer",
            "description": "optional"
          }
        }
      }
    },
    "examples": {
      "token-request-example": {
        "summary": "An Access Token request headers",
        "description": "Header values used for an Access Token request",
        "value": {
          "client_id": "<client-id>",
          "client_secret": "<client-secret>",
          "audience": "https://api.pax8.com",
          "grant_type": "client_credentials"
        }
      },
      "token-response-example": {
        "summary": "An Access Token",
        "description": "An Access Token response example",
        "value": {
          "access_token": "<access-token>",
          "expires_in": 86400,
          "token_type": "Bearer"
        }
      },
      "token-error-auth-example": {
        "summary": "An Access Token Unauthorized error",
        "description": "An Access Token Unauthorized error",
        "value": {
          "error": "access_denied",
          "error_description": "Unauthorized"
        }
      },
      "microsoft-office-365-e3": {
        "summary": "Microsoft Office 365 E3",
        "description": "an example response for `Microsoft Office 365 E3`",
        "value": {
          "id": "e91bba5e-a9a3-483f-b036-f80165d410e3",
          "name": "Microsoft Office 365 E3",
          "vendorName": "Microsoft",
          "shortDescription": "Microsoft Office 365 E3 includes fully installed Office applications across multiple devices, email hosting, HD video conferencing, and features to support compliance.",
          "sku": "MST-OFC-EE3-C100",
          "vendorSku": "796B6B5F-613C-4E24-A17C-EBA730D49C02"
        }
      },
      "company-0": {
        "summary": "An example company",
        "description": "An example response for a company",
        "value": {
          "id": "a4dfc6bf-f02e-4a79-9844-66ba6c02ec3a",
          "name": "VFC Network, Inc",
          "address": {
            "street": "48918 Liberty Lane Ave",
            "city": "Denver",
            "postalCode": "80210",
            "country": "US",
            "stateOrProvince": "Colorado"
          },
          "phone": "123-456-5555",
          "website": "vfc-network-inc-liberty.com",
          "status": "Active",
          "externalId": "A123",
          "selfServiceAllowed": false,
          "billOnBehalfOfEnabled": false,
          "orderApprovalRequired": false,
          "updatedDate": "2023-08-11T11:33:12.314-0600"
        }
      },
      "company-post": {
        "summary": "An example company",
        "description": "An example response for a company",
        "value": {
          "name": "VFC Network, Inc",
          "address": {
            "street": "48918 Liberty Lane Ave",
            "city": "Denver",
            "postalCode": "80210",
            "country": "US",
            "stateOrProvince": "Colorado"
          },
          "phone": "123-456-5555",
          "website": "vfc-network-inc-liberty.com",
          "status": "Active",
          "externalId": "A123",
          "selfServiceAllowed": false,
          "billOnBehalfOfEnabled": false,
          "orderApprovalRequired": false
        }
      },
      "company-update-post": {
        "summary": "An example company",
        "description": "An example response for a company",
        "value": {
          "id": "a4dfc6bf-f02e-4a79-9844-66ba6c02ec3a",
          "name": "VFC Network, Inc",
          "address": {
            "street": "48918 Liberty Lane Ave",
            "city": "Denver",
            "postalCode": "80210",
            "country": "US",
            "stateOrProvince": "Colorado"
          },
          "phone": "123-456-5555",
          "website": "vfc-network-inc-liberty.com",
          "status": "Active",
          "externalId": "A123",
          "selfServiceAllowed": false,
          "billOnBehalfOfEnabled": false,
          "orderApprovalRequired": false
        }
      },
      "microsoft-office-365-e3-details": {
        "summary": "Provision details for `Microsoft Office 365 E3`",
        "description": "An example response of provision details for `Microsoft Office 365 E3`",
        "value": {
          "content": [
            {
              "label": "Does the customer have an existing Microsoft account and can they log into https://login.microsoftonline.com?",
              "key": "msCustExists",
              "valueType": "Single-Value",
              "possibleValues": [
                "No, the customer does not have a Microsoft account",
                "Yes, the customer has and can log into their Microsoft account"
              ]
            },
            {
              "label": "Desired .onmicrosoft.com Customer Domain Prefix",
              "key": "msDomain",
              "valueType": "Input",
              "description": "Do not include the TLD when entering your domain (e.g. mydomain.onmicrosoft.com should be entered as mydomain"
            },
            {
              "label": "Contact First Name",
              "key": "arrowContactFirstName",
              "valueType": "Input"
            },
            {
              "label": "Contact Last Name",
              "key": "arrowContactLastName",
              "valueType": "Input"
            },
            {
              "label": "Contact Email",
              "key": "arrowContactEmail",
              "valueType": "Input"
            },
            {
              "label": "Microsoft Customer Tenant ID",
              "key": "msTenantId",
              "valueType": "Input"
            },
            {
              "label": "First Name",
              "key": "mca2020FirstName",
              "valueType": "Input"
            },
            {
              "label": "Last Name",
              "key": "mca2020LastName",
              "valueType": "Input"
            },
            {
              "label": "Email Address",
              "key": "mca2020Email",
              "valueType": "Input"
            },
            {
              "label": "Date of Acceptance",
              "key": "mca2020EffectiveDate",
              "valueType": "Input",
              "description": "(YYYY-MM-DD)"
            }
          ]
        }
      },
      "microsoft-office-365-e3-order": {
        "summary": "Order for `Microsoft Office 365 E3`",
        "description": "An example request body to order `Microsoft Office 365 E3`",
        "value": {
          "companyId": "f7fc273a-8d86-45c9-a26f-ffd42416adda",
          "lineItems": [
            {
              "productId": "aaaee3f-262c-47a4-b0e6-f9ce8b54fcd7",
              "subscriptionId": "04814f37-bef0-48b7-b388-c04a1e31f889",
              "commitmentTermID": "c000effb-98c9-4ea0-bf00-f6112c6d7649",
              "provisionStartDate": "2000-10-31T01:30:00.000-05:00",
              "billingTerm": "Monthly",
              "parentSubscriptionId": "78e6c85e-71b6-412c-8a59-d1b75072cd22",
              "quantity": 5,
              "provisioningDetails": [
                {
                  "key": "msCustExists",
                  "values": [
                    "No, the customer does not have a Microsoft account"
                  ]
                },
                {
                  "key": "msDomain",
                  "values": [
                    "vfc-network-inc-liberty"
                  ]
                },
                {
                  "key": "arrowContactFirstName",
                  "values": [
                    "Oliver"
                  ]
                },
                {
                  "key": "arrowContactLastName",
                  "values": [
                    "Harrison"
                  ]
                },
                {
                  "key": "arrowContactEmail",
                  "values": [
                    "oharrison@vfc-network-inc-liberty.com"
                  ]
                },
                {
                  "key": "mca2020FirstName",
                  "values": [
                    "Oliver"
                  ]
                },
                {
                  "key": "mca2020LastName",
                  "values": [
                    "Harrison"
                  ]
                },
                {
                  "key": "mca2020Email",
                  "values": [
                    "oharrison@vfc-network-inc-liberty.com"
                  ]
                },
                {
                  "key": "mca2020EffectiveDate",
                  "values": [
                    "2020-02-01"
                  ]
                }
              ]
            }
          ]
        }
      },
      "microsoft-office-365-e3-order-response": {
        "summary": "Response from Ordering `Microsoft Office 365 E3`",
        "description": "An example response from ordering `Microsoft Office 365 E3`",
        "value": {
          "id": "8e42de97-6bfe-4db5-864b-d2e4b18c71e2",
          "companyId": "fe7a2d5f-4a14-43ff-940e-a65cda66474a",
          "createdDate": "2020-12-01",
          "isScheduled": false,
          "lineItems": [
            {
              "id": "4915142b-1b3f-4488-9e68-e979dc661130",
              "productId": "e91bba5e-a9a3-483f-b036-f80165d410e3",
              "subscriptionId": "efcf8cb8-63fc-4dc4-8caa-6d6810ee8a97",
              "provisionStartDate": "2021-01-01T08:30:00Z",
              "billingTerm": "Monthly",
              "quantity": 5
            }
          ]
        }
      },
      "microsoft-office-365-e3-order-get-response": {
        "summary": "Response from Ordering `Microsoft Office 365 E3`",
        "description": "An example response from ordering `Microsoft Office 365 E3`",
        "value": {
          "id": "8e42de97-6bfe-4db5-864b-d2e4b18c71e2",
          "companyId": "fe7a2d5f-4a14-43ff-940e-a65cda66474a",
          "createdDate": "2020-12-01",
          "orderedBy": "Pax8 Partner",
          "orderedByUserId": "c1eb37ba-9515-4f1b-9d42-b1d7cc3b23f5",
          "orderedByUserEmail": "john@doe.com",
          "isScheduled": false,
          "lineItems": [
            {
              "id": "4915142b-1b3f-4488-9e68-e979dc661130",
              "productId": "e91bba5e-a9a3-483f-b036-f80165d410e3",
              "subscriptionId": "efcf8cb8-63fc-4dc4-8caa-6d6810ee8a97",
              "provisionStartDate": "2021-01-01T08:30:00Z",
              "billingTerm": "Monthly",
              "quantity": 5
            }
          ]
        }
      },
      "microsoft-office-365-e3-subscription": {
        "summary": "Subscription for `Microsoft Office 365 E3`",
        "description": "An example subscription for `Microsoft Office 365 E3`",
        "value": {
          "id": "05c587df-9e7d-4ef9-8218-0262198e36c9",
          "companyId": "fe7a2d5f-4a14-43ff-940e-a65cda66474a",
          "productId": "e91bba5e-a9a3-483f-b036-f80165d410e3",
          "quantity": 5,
          "startDate": "2021-01-01T08:30:00Z",
          "createdDate": "2020-12-01T08:30:00Z",
          "billingStart": "2021-01-01",
          "status": "Active",
          "price": 32.01,
          "currencyCode": "USD",
          "billingTerm": "Monthly"
        }
      },
      "companies-paged": {
        "summary": "A page of companies",
        "description": "An example page of companies",
        "value": {
          "content": [
            {
              "id": "9ba32659-d339-4539-be21-1f461dc1a415",
              "name": "112 Cloud Communications Backup",
              "address": {
                "street": "6905 N Winterhold Drive",
                "city": "Dayton",
                "postalCode": "82691",
                "country": "US",
                "stateOrProvince": "Utah"
              },
              "website": "cloud-communications-backup.com",
              "status": "Active",
              "externalId": "A123",
              "selfServiceAllowed": true,
              "billOnBehalfOfEnabled": true,
              "updatedDate": "2023-08-11T11:33:12.314-0600"
            },
            {
              "id": "0d3f48ae-9764-4b3a-9554-d28fe345230c",
              "name": "021 Modern Executive",
              "address": {
                "street": "15320 Pipeline St",
                "city": "Tacoma",
                "postalCode": "50921",
                "country": "CA",
                "stateOrProvince": "Ontario"
              },
              "website": "021-modern-executive.com",
              "status": "Active",
              "externalId": "B123",
              "selfServiceAllowed": true,
              "billOnBehalfOfEnabled": false,
              "updatedDate": "2023-08-11T11:33:12.314-0600"
            },
            {
              "id": "d904c896-e19e-4daa-9b73-c992a000ad8a",
              "name": "047 Acupuncture Search, Inc.",
              "address": {
                "street": "asdasdasd4 Commerce Ave",
                "city": "Centennial",
                "postalCode": "92426",
                "country": "US",
                "stateOrProvince": "Colorado"
              },
              "website": "32peakviewave.com",
              "status": "Active",
              "externalId": "C123",
              "selfServiceAllowed": false,
              "billOnBehalfOfEnabled": false,
              "updatedDate": "2023-08-11T11:33:12.314-0600"
            },
            {
              "id": "e74bc79a-71ce-414e-a8e9-d6a155933f86",
              "name": "0633 - Citizens State Bank",
              "address": {
                "street": "2445 South West Ski Rd",
                "city": "Salt Lake City",
                "postalCode": "79510",
                "country": "US",
                "stateOrProvince": "Texas"
              },
              "website": "sout-west-ski-2.com",
              "status": "Inactive",
              "externalId": "D123",
              "selfServiceAllowed": false,
              "billOnBehalfOfEnabled": false,
              "updatedDate": "2023-08-11T11:33:12.314-0600"
            },
            {
              "id": "9ebc4a03-1c08-4c8b-9cc7-f5eb0b686cc4",
              "name": "0671 - Motivational County Bank Systems",
              "address": {
                "street": "10191 King Zane Ave N",
                "city": "Buffalo Grove",
                "postalCode": "61079",
                "country": "US",
                "stateOrProvince": "Connecticut"
              },
              "website": "motivational-county-bank-systems.com",
              "status": "Active",
              "externalId": "E123",
              "selfServiceAllowed": false,
              "billOnBehalfOfEnabled": false,
              "updatedDate": "2023-08-11T11:33:12.314-0600"
            },
            {
              "id": "81bfe305-e56c-483e-ba4f-943c3e31411a",
              "name": "0721 - Bank of Physicians",
              "address": {
                "street": "7589 W. Bahia Rd Suite 300",
                "city": "Scottsdale",
                "postalCode": "52322",
                "country": "US",
                "stateOrProvince": "Indiana"
              },
              "website": "bank-of-physicians.net",
              "status": "Active",
              "externalId": "F123",
              "selfServiceAllowed": false,
              "billOnBehalfOfEnabled": false,
              "updatedDate": "2023-08-11T11:33:12.314-0600"
            },
            {
              "id": "20497fca-e228-44ae-8f2d-08296d7e0e4d",
              "name": "072 - New Sharpco Veterinary Printing",
              "address": {
                "street": "Inks Greensboro Drive, Suite 200",
                "city": "Winchester",
                "postalCode": "61289",
                "country": "US",
                "stateOrProvince": "Arizona"
              },
              "website": "new-sharpco-veterinary-printing.com",
              "status": "Active",
              "externalId": "G123",
              "selfServiceAllowed": false,
              "billOnBehalfOfEnabled": false,
              "updatedDate": "2023-08-11T11:33:12.314-0600"
            },
            {
              "id": "eeb7763f-0d25-49a1-a3f6-842631abe0ff",
              "name": "0841 - Precision Community Insurance",
              "address": {
                "street": "40915 Sorrento Mask Blvd.",
                "city": "Gotham",
                "postalCode": "89258",
                "country": "US",
                "stateOrProvince": "New Jersey"
              },
              "website": "precision-community-insurance.com",
              "status": "Active",
              "externalId": "H123",
              "selfServiceAllowed": false,
              "billOnBehalfOfEnabled": false,
              "updatedDate": "2023-08-11T11:33:12.314-0600"
            },
            {
              "id": "3953a817-c9b5-46bf-9002-8ba8648cd9a4",
              "name": "0I-Ride Powersports",
              "address": {
                "street": "East Camelback Hwy, Suite 6711",
                "city": "New Britain",
                "postalCode": "55446-2800",
                "country": "US",
                "stateOrProvince": "North Carolina"
              },
              "website": "0i-ride-powersports.com",
              "status": "Active",
              "externalId": "J123",
              "selfServiceAllowed": false,
              "billOnBehalfOfEnabled": false,
              "updatedDate": "2023-08-11T11:33:12.314-0600"
            },
            {
              "id": "a4dfc6bf-f02e-4a79-9844-66ba6c02ec3a",
              "name": "100 Smith Avenue Condos",
              "address": {
                "street": "2677 Carlson Willis Pkwy 618, Suite 1197",
                "city": "Spring Park",
                "postalCode": "85158",
                "country": "US",
                "stateOrProvince": "Arizona"
              },
              "website": "100-smith-avenue-condos.com",
              "status": "Active",
              "externalId": "K123",
              "selfServiceAllowed": false,
              "billOnBehalfOfEnabled": false,
              "updatedDate": "2023-08-11T11:33:12.314-0600"
            }
          ],
          "page": {
            "size": 10,
            "totalElements": 65,
            "totalPages": 7,
            "number": 0
          }
        }
      },
      "dependencies-example": {
        "summary": "An example of product dependencies",
        "description": "An example of product dependencies",
        "value": {
          "commitmentDependencies": [
            {
              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
              "term": "3-Year",
              "autoRenew": true,
              "renewalWindowDaysBeforeTermEnd": 0,
              "renewalWindowDaysAfterTermEnd": 0,
              "allowForQuantityIncrease": true,
              "allowForQuantityDecrease": true,
              "allowForEarlyCancellation": true,
              "cancellationFeeApplied": true,
              "isTransferable": true
            }
          ],
          "productDependencies": [
            {
              "name": "Requires",
              "products": [
                {
                  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                  "name": "Acme Corps Productivity Suite",
                  "vendorName": "Acme Corps",
                  "shortDescription": "Short description about the product to sell",
                  "sku": "4225-776-3234"
                }
              ]
            }
          ]
        }
      },
      "subscriptions-paged": {
        "summary": "A page of subscriptions",
        "description": "An example page of subscriptions",
        "value": {
          "content": [
            {
              "id": "09ac6f1d-c30a-4d03-9882-145a4df71735",
              "companyId": "19e83ea9-41a1-43fc-91a1-6fee03337d91",
              "productId": "1810aea9-0c95-421d-a77a-7ebccdfa2f6c",
              "quantity": 5,
              "startDate": "2021-01-01T08:30:00Z",
              "createdDate": "2020-12-03",
              "billingStart": "2021-01-01",
              "status": "PendingAutomated",
              "price": 150,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            },
            {
              "id": "e8f372b6-e2aa-4f3c-9baa-b34f31c921e5",
              "companyId": "da300208-0c17-4b6f-ab82-e1e7c0b98362",
              "productId": "5766ecd7-a0bf-4ee0-ba1d-bd3ca92ca555",
              "quantity": 1,
              "startDate": "2020-11-12T08:30:00Z",
              "endDate": "2020-11-18",
              "createdDate": "2020-11-11",
              "billingStart": "2020-11-12",
              "status": "PendingCancel",
              "price": 100,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            },
            {
              "id": "d1758c49-f81c-48af-8f30-e7e93adf6acc",
              "companyId": "da300208-0c17-4b6f-ab82-e1e7c0b98362",
              "productId": "7597a0fd-f0ec-4547-8a20-fd2d3f311a5c",
              "quantity": 1,
              "startDate": "2020-11-12T08:30:00Z",
              "endDate": "2020-11-12T08:30:00Z",
              "createdDate": "2020-11-11",
              "billingStart": "2020-11-12",
              "status": "PendingCancel",
              "price": 0,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            },
            {
              "id": "a95e2d7c-cdcf-4cf9-8c94-34ce71e06fa1",
              "companyId": "dbb4aa30-6b8b-425c-96c0-c72e570b28af",
              "productId": "25d15d2e-b293-4393-9e16-e6890a6650b0",
              "quantity": 1,
              "startDate": "2020-11-11T08:30:00Z",
              "endDate": "2020-11-30T08:30:00Z",
              "createdDate": "2020-11-11",
              "billingStart": "2020-11-11",
              "status": "PendingCancel",
              "price": 250,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            },
            {
              "id": "b010a5d2-d604-434d-b331-d1a3ae6e759e",
              "companyId": "0c5bd95d-bd33-4bb0-8419-a821c00173dd",
              "productId": "2d3432cb-5a61-4f87-a197-7ea8e2227aeb",
              "quantity": 8,
              "startDate": "2020-11-09T08:30:00Z",
              "createdDate": "2020-11-09",
              "billingStart": "2020-11-09",
              "status": "Active",
              "price": 6,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            },
            {
              "id": "e03daa96-2b4c-4925-a0aa-cb8061faf4ca",
              "companyId": "78329722-82e9-42e4-b220-d8d4215217e5",
              "productId": "8540387d-967b-4bba-9a5c-2c41e5769c6e",
              "quantity": 7,
              "startDate": "2020-09-21T08:30:00Z",
              "createdDate": "2020-09-21",
              "billingStart": "2020-09-21",
              "status": "PendingManual",
              "price": 77.77,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            },
            {
              "id": "ccfd1789-8f88-4c7c-9c10-d726f776c1dc",
              "companyId": "df71a444-a03b-4e49-85d3-223d63ed500a",
              "productId": "d0427628-5c3b-4258-b6f2-e6a3dfeb62ea",
              "quantity": 1,
              "startDate": "2020-09-21T08:30:00Z",
              "createdDate": "2020-09-21",
              "billingStart": "2020-09-21",
              "status": "Active",
              "price": 33,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            },
            {
              "id": "4ad86d04-a5db-4934-be3e-b6f024123951",
              "companyId": "b900f223-baeb-4e0f-8a3f-f03fc1f207fd",
              "productId": "887b69fd-0171-4ea7-bc51-6e5ee1fc59c8",
              "quantity": 2,
              "startDate": "2020-04-30T08:30:00Z",
              "createdDate": "2020-04-30",
              "billingStart": "2020-04-30",
              "status": "Active",
              "price": 1896,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            },
            {
              "id": "d9b4705f-b316-4e2b-959e-c542e01b749f",
              "companyId": "47228505-4813-4024-a1fd-666e8a5bbf82",
              "productId": "5278429f-97ea-4473-a571-798a06d26948",
              "quantity": 1,
              "startDate": "2020-04-23T08:30:00Z",
              "createdDate": "2020-04-22",
              "billingStart": "2020-04-23",
              "status": "PendingManual",
              "price": 15,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            },
            {
              "id": "a7494751-4717-4fa6-a5fd-c817c3cf3b5c",
              "companyId": "47228505-4813-4024-a1fd-666e8a5bbf82",
              "productId": "887b69fd-0171-4ea7-bc51-6e5ee1fc59c8",
              "quantity": 1,
              "startDate": "2020-04-22T08:30:00Z",
              "createdDate": "2020-04-22",
              "billingStart": "2020-04-22",
              "status": "Active",
              "price": 110,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            }
          ],
          "page": {
            "size": 10,
            "totalElements": 109,
            "totalPages": 11,
            "number": 0
          }
        }
      },
      "subscription-history": {
        "summary": "A list of changes to a subscription",
        "description": "The history of a subscription",
        "value": {
          "content": [
            {
              "id": "99b90e2e-cc01-4fb6-9dd2-3481196bfffe",
              "companyId": "2aa4862a-9474-4138-9863-4f0a8e4cec74",
              "productId": "4f76b357-9ac1-47fa-9369-feb80a32f87e",
              "quantity": 5,
              "startDate": "2021-01-01T08:30:00Z",
              "createdDate": "2020-12-01T13:20:13.153-0700",
              "updatedDate": "2020-12-10T03:12:14.453-0300",
              "billingStart": "2021-01-01",
              "status": "PendingAutomated",
              "price": 86,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            },
            {
              "id": "99b90e2e-cc01-4fb6-9dd2-3481196bfffe",
              "companyId": "2aa4862a-9474-4138-9863-4f0a8e4cec74",
              "productId": "4f76b357-9ac1-47fa-9369-feb80a32f87e",
              "quantity": 2,
              "startDate": "2020-12-01T08:30:00Z",
              "createdDate": "2020-12-01T13:20:13.153-0700",
              "billingStart": "2020-12-01",
              "status": "Active",
              "price": 86,
              "currencyCode": "USD",
              "billingTerm": "Monthly"
            }
          ]
        }
      },
      "subscription-update-example": {
        "summary": "A Subscription update",
        "description": "A Subscription update example",
        "value": {
          "quantity": 11,
          "startDate": "2000-10-31T01:30:00.000-05:00",
          "endDate": "2001-10-31T01:30:00.000-05:00",
          "price": 15.39,
          "currencyCode": "USD",
          "billingTerm": "Monthly",
          "provisioningDetails": [
            {
              "key": "userEmailAddress",
              "values": [
                "joeysherp@example.com"
              ]
            }
          ]
        }
      },
      "invoices-paged": {
        "summary": "A page of invoices",
        "description": "An example page of invoices",
        "value": {
          "content": [
            {
              "id": "0b157f32-a423-4fc4-bed0-82ef2f913ab2",
              "total": 9985.96,
              "currencyCode": "USD",
              "balance": 729.22,
              "carriedBalance": 9801.13,
              "status": "Unpaid",
              "invoiceDate": "2021-01-01",
              "dueDate": "2021-01-15",
              "partnerName": "A Child Partner Name"
            },
            {
              "id": "909f2b60-d3e6-4488-9224-5f4788aa7128",
              "total": 19796231.89,
              "currencyCode": "USD",
              "balance": 562939.58,
              "carriedBalance": 19565889.67,
              "status": "Unpaid",
              "invoiceDate": "2021-01-01",
              "dueDate": "2021-01-15",
              "partnerName": "My Partner Name"
            },
            {
              "id": "94444ad7-1237-4dcf-a391-ccf201b4151f",
              "total": 19228924.94,
              "currencyCode": "USD",
              "balance": 620266.05,
              "carriedBalance": 18939345.97,
              "status": "Carried",
              "invoiceDate": "2020-12-01",
              "dueDate": "2020-12-15",
              "partnerName": "My Partner Name"
            },
            {
              "id": "0adfca6c-8c5c-4de2-922c-331271d20aa7",
              "total": 9256.74,
              "currencyCode": "USD",
              "balance": 957.55,
              "carriedBalance": 8843.58,
              "status": "Carried",
              "invoiceDate": "2020-12-01",
              "dueDate": "2020-12-15",
              "partnerName": "A Child Partner Name"
            },
            {
              "id": "62631fa6-b44a-466d-b6f5-ea2bd320cf3d",
              "total": 8299.19,
              "currencyCode": "USD",
              "balance": 729.22,
              "carriedBalance": 8114.36,
              "status": "Carried",
              "invoiceDate": "2020-11-01",
              "dueDate": "2020-11-15",
              "partnerName": "A Child Partner"
            },
            {
              "id": "06053601-a52e-4751-b90e-cc46ab466e96",
              "total": 18601239.24,
              "currencyCode": "USD",
              "balance": 560669.68,
              "carriedBalance": 18373057.17,
              "status": "Carried",
              "invoiceDate": "2020-11-01",
              "dueDate": "2020-11-15",
              "partnerName": "My Partner Name"
            },
            {
              "id": "d5129fb2-7adf-4829-a3a7-d6def853e067",
              "total": 7429.99,
              "currencyCode": "USD",
              "balance": 815.42,
              "carriedBalance": 7298.94,
              "status": "Carried",
              "invoiceDate": "2020-10-01",
              "dueDate": "2020-10-15",
              "partnerName": "A Child Partner"
            },
            {
              "id": "7a390f4e-67dc-4ea7-80a5-0f058998c646",
              "total": 18036312.44,
              "currencyCode": "USD",
              "balance": 597022.66,
              "carriedBalance": 17770441.73,
              "status": "Carried",
              "invoiceDate": "2020-10-01",
              "dueDate": "2020-10-15",
              "partnerName": "My Partner Name"
            },
            {
              "id": "be1ede52-31e2-4091-97c8-629a09f3293d",
              "total": 7210.94,
              "currencyCode": "USD",
              "balance": 442.4,
              "carriedBalance": 6856.54,
              "status": "Carried",
              "invoiceDate": "2020-09-01",
              "dueDate": "2020-09-15",
              "partnerName": "A Child Partner"
            },
            {
              "id": "17029935-36b0-4f0f-9d5e-c8af04f7b57a",
              "total": 17432960,
              "currencyCode": "USD",
              "balance": 560470.66,
              "carriedBalance": 17204372.33,
              "status": "Void",
              "invoiceDate": "2020-09-01",
              "dueDate": "2020-09-15",
              "partnerName": "My Partner Name"
            }
          ],
          "page": {
            "size": 10,
            "totalElements": 204,
            "totalPages": 21,
            "number": 0
          }
        }
      },
      "invoice-0": {
        "summary": "An invoice",
        "description": "An invoice example",
        "value": {
          "id": "17029935-36b0-4f0f-9d5e-c8af04f7b57a",
          "total": 17432960,
          "currencyCode": "USD",
          "balance": 560470.66,
          "carriedBalance": 17204372.33,
          "status": "Paid",
          "invoiceDate": "2020-09-01",
          "dueDate": "2020-09-15",
          "partnerName": "My Partner Name"
        }
      },
      "invoice-items": {
        "summary": "An invoice items page",
        "description": "An invoice items page example",
        "value": {
          "content": [
            {
              "type": "subscription",
              "purchaseOrderNumber": "N/A",
              "companyId": "cc0ac255-7c0b-4123-ac8d-a6c280b85eae",
              "companyName": "Brick and Mortar Tech",
              "startPeriod": "2019-04-01",
              "endPeriod": "2019-05-01",
              "quantity": 11,
              "unitOfMeasure": "User",
              "term": "Monthly",
              "sku": "PAX-233-ukw0-9092",
              "description": "Microsoft Office E3",
              "rateType": "single",
              "chargeType": "per",
              "price": 50000,
              "subTotal": 27500,
              "cost": 2500,
              "costTotal": 27500,
              "offeredBy": "Pax8",
              "billedByPax8": false,
              "total": 550000,
              "productId": "de4ff8a5-e836-4412-89e7-03236c0641c4",
              "productName": "Microsoft Office E3",
              "billingFee": 0,
              "billingFeeRate": 0,
              "amountDue": 27500,
              "currencyCode": "USD",
              "subscriptionId": "f6b60139-8ab6-45f4-b808-354ebbe53070"
            }
          ],
          "page": {
            "size": 1,
            "totalElements": 762,
            "totalPages": 762,
            "number": 0
          }
        }
      },
      "usage-summaries-paged": {
        "summary": "A page of usage summaries",
        "description": "An example page of usage summaries",
        "value": {
          "content": [
            {
              "id": "52d8d4bc-59db-48fe-9aa7-95bed562ff95",
              "companyId": "ede334e7-d1c7-4e0a-822d-dee891f6ce9a",
              "subscriptionId": "8d04ad8c-456a-4b1d-9abe-a42ae526f683",
              "productId": "b3bb9455-c454-4efa-9be8-15b86caf6933",
              "resourceGroup": "Company 1",
              "vendorName": "Microsoft",
              "currentCharges": 100.56,
              "currencyCode": "USD",
              "partnerTotal": 86.456,
              "isTrial": false
            },
            {
              "id": "5df21356-eaef-4b04-935a-afd22c57a022",
              "companyId": "f594d111-4360-4061-8664-cde1c4e465e8",
              "subscriptionId": "8d04ad8c-456a-4b1d-9abe-a42ae526f683",
              "productId": "b3bb9455-c454-4efa-9be8-15b86caf6933",
              "resourceGroup": "Company 2",
              "vendorName": "Microsoft",
              "currentCharges": 46.56,
              "currencyCode": "USD",
              "partnerTotal": 36.456,
              "isTrial": false
            },
            {
              "id": "d9eccc77-36cb-4a57-b88b-410d8e4ea674",
              "companyId": "5cb96b47-fc4f-4116-8603-0f0883781b94",
              "subscriptionId": "8d04ad8c-456a-4b1d-9abe-a42ae526f683",
              "productId": "b3bb9455-c454-4efa-9be8-15b86caf6933",
              "resourceGroup": "Company 3",
              "vendorName": "Microsoft",
              "currentCharges": 86.97,
              "currencyCode": "USD",
              "partnerTotal": 57.246,
              "isTrial": false
            },
            {
              "id": "fce41092-5317-4f9d-a6e0-6d3db34640c7",
              "companyId": "e4db6c63-bd19-4f31-b403-ece3e3a4d9e0",
              "subscriptionId": "8d04ad8c-456a-4b1d-9abe-a42ae526f683",
              "productId": "b3bb9455-c454-4efa-9be8-15b86caf6933",
              "resourceGroup": "Company A",
              "vendorName": "Microsoft",
              "currentCharges": 142.58,
              "currencyCode": "USD",
              "partnerTotal": 113.546,
              "isTrial": true
            },
            {
              "id": "2371ffd6-51ba-4448-8b8e-1835ebe76e99",
              "companyId": "5a69a819-3215-45e6-9178-3445bcfee15b",
              "subscriptionId": "8d04ad8c-456a-4b1d-9abe-a42ae526f683",
              "productId": "b3bb9455-c454-4efa-9be8-15b86caf6933",
              "resourceGroup": "Company B",
              "vendorName": "Microsoft",
              "currentCharges": 100.56,
              "currencyCode": "USD",
              "partnerTotal": 86.456,
              "isTrial": true
            },
            {
              "id": "f8c6618c-9453-4062-a628-50c4052cb52e",
              "companyId": "8758d69f-81e3-4016-b42d-9b150bf415ad",
              "subscriptionId": "8d04ad8c-456a-4b1d-9abe-a42ae526f683",
              "productId": "b3bb9455-c454-4efa-9be8-15b86caf6933",
              "resourceGroup": "Company C",
              "vendorName": "Microsoft",
              "currentCharges": 452.86,
              "currencyCode": "USD",
              "partnerTotal": 350.456,
              "isTrial": false
            },
            {
              "id": "96ac14ec-7e77-409f-a22e-a4ed4fc85b8e",
              "companyId": "3474e746-42c9-4c4b-8ec2-77f4a087e8a7",
              "subscriptionId": "8d04ad8c-456a-4b1d-9abe-a42ae526f683",
              "productId": "b3bb9455-c454-4efa-9be8-15b86caf6933",
              "resourceGroup": "Company D",
              "vendorName": "Microsoft",
              "currentCharges": 99.45,
              "currencyCode": "USD",
              "partnerTotal": 84.456,
              "isTrial": false
            },
            {
              "id": "72f8be97-7c39-477e-9feb-eba85b362d76",
              "companyId": "c16a440d-2aa5-4a53-853c-2d5f0b7ab37c",
              "subscriptionId": "8d04ad8c-456a-4b1d-9abe-a42ae526f683",
              "productId": "b3bb9455-c454-4efa-9be8-15b86caf6933",
              "resourceGroup": "Company E",
              "vendorName": "Microsoft",
              "currentCharges": 400.56,
              "currencyCode": "USD",
              "partnerTotal": 386.456,
              "isTrial": false
            },
            {
              "id": "8f545a6f-a361-4b4d-a79d-a369b2716546",
              "companyId": "b5c951b8-9b11-4ff3-9964-d699382d8653",
              "subscriptionId": "8d04ad8c-456a-4b1d-9abe-a42ae526f683",
              "productId": "b3bb9455-c454-4efa-9be8-15b86caf6933",
              "resourceGroup": "Company F",
              "vendorName": "Microsoft",
              "currentCharges": 450.56,
              "currencyCode": "USD",
              "partnerTotal": 350.456,
              "isTrial": false
            },
            {
              "id": "0224b429-7d6a-41ca-9137-2333b939a668",
              "companyId": "7312984c-ef85-4f77-9dd6-3c6e637c6864",
              "subscriptionId": "8d04ad8c-456a-4b1d-9abe-a42ae526f683",
              "productId": "b3bb9455-c454-4efa-9be8-15b86caf6933",
              "resourceGroup": "Company G",
              "vendorName": "Microsoft",
              "currentCharges": 99.56,
              "currencyCode": "USD",
              "partnerTotal": 71.456,
              "isTrial": false
            }
          ],
          "page": {
            "size": 10,
            "totalElements": 15,
            "totalPages": 2,
            "number": 0
          }
        }
      },
      "usage-lines-paged": {
        "summary": "A page of usage lines",
        "description": "An example page of usage lines",
        "value": {
          "content": [
            {
              "usageDate": "2020-01-14",
              "productName": "Proofpoint Essentials - Professional",
              "productId": "61bf3a55-f1da-4efd-88eb-bf362b0ad51e",
              "unitOfMeasure": "User",
              "quantity": 3,
              "currentCharges": 15.99,
              "currentProfit": 5.61,
              "partnerTotal": 10.38,
              "unitPrice": 5.33,
              "currencyCode": "USD",
              "isTrial": false
            },
            {
              "usageDate": "2020-01-14",
              "productName": "Proofpoint Essentials - Avdanced",
              "productId": "e73f3a55-f1da-4efd-88eb-bf3je60ad5lq",
              "unitOfMeasure": "User",
              "quantity": 3,
              "currentCharges": 15.99,
              "currentProfit": 5.61,
              "partnerTotal": 10.38,
              "unitPrice": 5.33,
              "currencyCode": "USD",
              "isTrial": false
            },
            {
              "usageDate": "2020-01-14",
              "productName": "Proofpoint Essentials - Enterprise",
              "productId": "ac6843db-abba-40a4-8130-8d33c374aecb",
              "unitOfMeasure": "Seat",
              "quantity": 3,
              "currentCharges": 13.99,
              "currentProfit": 2.61,
              "partnerTotal": 7.38,
              "unitPrice": 2.33,
              "currencyCode": "USD",
              "isTrial": true
            },
            {
              "usageDate": "2020-01-14",
              "productName": "Proofpoint VM's",
              "productId": "620a63be-cb0c-4df9-9c7b-5517e84c3b98",
              "unitOfMeasure": "User",
              "quantity": 4,
              "currentCharges": 16,
              "currentProfit": 6,
              "partnerTotal": 10,
              "unitPrice": 4,
              "currencyCode": "USD",
              "isTrial": false
            },
            {
              "usageDate": "2020-01-14",
              "productName": "Proofpoint Servers",
              "productId": "bf2777cb-53f4-449e-a63a-914da4d4dbda",
              "unitOfMeasure": "User",
              "quantity": 3,
              "currentCharges": 15.99,
              "currentProfit": 5.61,
              "partnerTotal": 10.38,
              "unitPrice": 5.33,
              "currencyCode": "USD",
              "isTrial": false
            },
            {
              "usageDate": "2020-01-14",
              "productName": "Proofpoint Workstations",
              "productId": "4cd5353e-b473-4ce4-a580-c6568d38aeb7",
              "unitOfMeasure": "Seat",
              "quantity": 4,
              "currentCharges": 19.99,
              "currentProfit": 4.61,
              "partnerTotal": 15.38,
              "unitPrice": 5,
              "currencyCode": "USD",
              "isTrial": false
            },
            {
              "usageDate": "2020-01-14",
              "productName": "Proofpoint Storage",
              "productId": "f7a5eaee-47bb-44f1-80b5-0e26898234db",
              "unitOfMeasure": "User",
              "quantity": 3,
              "currentCharges": 15.99,
              "currentProfit": 5.61,
              "partnerTotal": 10.38,
              "unitPrice": 5.33,
              "currencyCode": "USD",
              "isTrial": false
            },
            {
              "usageDate": "2020-01-14",
              "productName": "Proofpoint International",
              "productId": "0ff7d338-d5c8-47ab-b091-d13037223014",
              "unitOfMeasure": "User",
              "quantity": 3,
              "currentCharges": 15.99,
              "currentProfit": 5.61,
              "partnerTotal": 10.38,
              "unitPrice": 5.33,
              "currencyCode": "USD",
              "isTrial": false
            },
            {
              "usageDate": "2020-01-14",
              "productName": "Proofpoint Domestic",
              "productId": "bb51e4ba-ba53-4958-b9ee-af67fa008ceb",
              "unitOfMeasure": "User",
              "quantity": 3,
              "currentCharges": 15.99,
              "currentProfit": 5.61,
              "partnerTotal": 10.38,
              "unitPrice": 5.33,
              "currencyCode": "USD",
              "isTrial": false
            },
            {
              "usageDate": "2020-01-14",
              "productName": "Proofpoint Express",
              "productId": "f0f2c7cc-4ae2-4a16-85ac-24fa19c03f27",
              "unitOfMeasure": "User",
              "quantity": 3,
              "currentCharges": 15.99,
              "currentProfit": 5.61,
              "partnerTotal": 10.38,
              "unitPrice": 5.33,
              "currencyCode": "USD",
              "isTrial": false
            }
          ],
          "page": {
            "size": 10,
            "totalElements": 115,
            "totalPages": 11,
            "number": 0
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://token-manager.pax8.com/oauth/token",
            "scopes": {}
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}