# coding: utf-8

"""
    Authentication

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tl_pax8.models.find_subscription_history_by_subscription_id200_response import FindSubscriptionHistoryBySubscriptionId200Response

class TestFindSubscriptionHistoryBySubscriptionId200Response(unittest.TestCase):
    """FindSubscriptionHistoryBySubscriptionId200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FindSubscriptionHistoryBySubscriptionId200Response:
        """Test FindSubscriptionHistoryBySubscriptionId200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FindSubscriptionHistoryBySubscriptionId200Response`
        """
        model = FindSubscriptionHistoryBySubscriptionId200Response()
        if include_optional:
            return FindSubscriptionHistoryBySubscriptionId200Response(
                content = [
                    tl_pax8.models.subscription.Subscription(
                        id = '', 
                        parent_subscription_id = '', 
                        company_id = '', 
                        product_id = '', 
                        quantity = 1.337, 
                        start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        billing_start = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        status = 'Active', 
                        price = 15.39, 
                        currency_code = 'USD', 
                        partner_cost = 11.39, 
                        billing_term = 'Monthly', 
                        provisioning_details = [
                            tl_pax8.models.provisioning_detail.ProvisioningDetail(
                                label = '', 
                                key = 'userEmailAddress', 
                                values = [
                                    ''
                                    ], 
                                description = 'Provide the user's email address', 
                                value_type = 'Input', 
                                possible_values = [
                                    ''
                                    ], )
                            ], 
                        commitment_term = null, )
                    ]
            )
        else:
            return FindSubscriptionHistoryBySubscriptionId200Response(
        )
        """

    def testFindSubscriptionHistoryBySubscriptionId200Response(self):
        """Test FindSubscriptionHistoryBySubscriptionId200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
